name: Build and Release APK

on:
  push:
    branches:
      - main

jobs:
  build:
    name: Build APK
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Check Commit Message
        id: commit
        run: echo ::set-output name=commit_message::$(git log --format=%B -n 1 ${{ github.sha }})

      - name: Verify Commit Message
        id: verify
        run: |
          if [[ "${{ steps.commit.outputs.commit_message }}" =~ ^app:.* ]]; then
            echo "Commit message is valid. Proceeding with build and release."
            echo "::set-output name=valid::true"
          else
            echo "Commit message is not valid. Skipping build and release."
            echo "::set-output name=valid::false"
          fi

      - name: Setup Flutter
        if: steps.verify.outputs.valid == 'true'
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '2.8.1' # Replace with the desired Flutter version
          
      - name: Setup Dart
        if: steps.verify.outputs.valid == 'true'
        uses: dart-lang/setup-dart@9a04e6d73cca37bd455e0608d7e5092f881fd603

      - name: Set Dart SDK Path
        if: steps.verify.outputs.valid == 'true'
        run: echo "DART_SDK_PATH=/opt/dart-sdk" >> $GITHUB_ENV
          
      - name: Clear Flutter Cache
        if: steps.verify.outputs.valid == 'true'
        run: cd drive_counter && flutter clean

      - name: Build APK
        if: steps.verify.outputs.valid == 'true'
        run: cd drive_counter && flutter build apk --release

      - name: Create Release
        if: steps.verify.outputs.valid == 'true'
        uses: actions/create-release@v1
        with:
          token: ${{ secrets.RELEASE_TOKEN }}
          tag_name: v${{ github.run_number }}
          release_name: Release ${{ github.run_number }}
          body: Automated release by GitHub Actions
          draft: false
          prerelease: false
          files: |
            build/app/outputs/flutter-apk/app-release.apk

